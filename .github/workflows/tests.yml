#name: Test
#
#on:
#  pull_request:
#    branches: [ develop ]
#  push:
#    branches:
#      - '*'
#
#  workflow_dispatch:
#
#jobs:
#  test_auth:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.11
#      - name: create .env file
#        run: |
#          echo FASTAPI_HOST=${{ secrets.FASTAPI_HOST }} >> auth/.env
#          echo FASTAPI_PORT=${{ secrets.FASTAPI_PORT }} >> auth/.env
#          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> auth/.env
#          echo JWT_ACCESS_TTL=${{ secrets.JWT_ACCESS_TTL }} >> auth/.env
#          echo JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }} >> auth/.env
#          echo JWT_REFRESH_TTL=${{ secrets.JWT_REFRESH_TTL }} >> auth/.env
#          echo MONGO_PORT='27017' >> auth/.env
#          echo MONGO_URI='mongodb://mongodb:27017' >> auth/.env
#          echo DB_NAME=${{ secrets.DB_NAME }} >> auth/.env
#          echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> auth/.env
#          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> auth/.env
#          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> auth/.env
#          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> auth/.env
#          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> auth/.env
#          echo API_FNS_KEY=${{ secrets.API_FNS_KEY }} >> auth/.env
#          echo USER_ID=${{ secrets.USER_ID }} >> auth/.env
#          echo USER_INN=${{ secrets.USER_INN }} >> auth/.env
#          echo USER_TOKEN=${{ secrets.USER_TOKEN }} >> auth/.env
#      - name: Build docker
#        run: cd auth && docker-compose up -d --build
#      - name: Test
#        env:
#          COMPOSE_INTERACTIVE_NO_CLI: 1
#        run: cd auth && docker-compose exec -T app pytest
#  test_parsers:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.11
#      - name: create .env file
#        run: |
#          echo FASTAPI_HOST=${{ secrets.FASTAPI_HOST }} >> parser/.env
#          echo FASTAPI_PORT=${{ secrets.FASTAPI_PORT }} >> parser/.env
#          echo DB_NAME=${{ secrets.DB_NAME }} >> parser/.env
#          echo USER_AGENT='Some egent' >> parser/.env
#          echo AUTOMATION_CONTROLLED=${{ secrets.AUTOMATION_CONTROLLED }} >> parser/.env
#          echo URL_LOCALHOST_FRONT=${{ secrets.URL_LOCALHOST_FRONT }} >> parser/.env
#          echo URL_BRENDBOOST_BACK=${{ secrets.URL_BRENDBOOST_BACK }} >> parser/.env
#          echo URL_BRENDBOOST_FRONT=${{ secrets.URL_BRENDBOOST_FRONT }} >> parser/.env
#          echo ORGANIZATIONS_API_KEY_YANDEX_KEY=${{ secrets.ORGANIZATIONS_API_KEY_YANDEX_KEY }} >> parser/.env
#          echo GEOCODER_API_KEY_YANDEX_KEY=${{ secrets.GEOCODER_API_KEY_YANDEX_KEY }} >> parser/.env
#          echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> parser/.env
#          echo GOOGLE_CHROME_BIN=${{ secrets.GOOGLE_CHROME_BIN }} >> parser/.env
#          echo CHROMEDRIVER_PATH=${{ secrets.CHROMEDRIVER_PATH }} >> parser/.env
#          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> parser/.env
#          echo JWT_ACCESS_TTL=${{ secrets.JWT_ACCESS_TTL }} >> parser/.env
#          echo JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }} >> parser/.env
#          echo JWT_REFRESH_TTL=${{ secrets.JWT_REFRESH_TTL }} >> parser/.env
#          echo MONGO_PORT='27017' >> parser/.env
#          echo MONGO_URI='mongodb://mongodb:27017' >> parser/.env
#      - name: Build docker
#        run: cd parser && docker-compose up -d --build
#      - name: Test
#        env:
#          COMPOSE_INTERACTIVE_NO_CLI: 1
#        run: cd parser && docker-compose exec -T fastapi pytest
